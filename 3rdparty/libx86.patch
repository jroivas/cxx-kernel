diff -urN libx86.orig/lrmi.c libx86.my/lrmi.c
--- libx86.orig/lrmi.c	2011-10-16 16:41:19.655891295 +0300
+++ libx86.my/lrmi.c	2011-10-16 17:03:50.349005307 +0300
@@ -28,6 +28,11 @@
 
 #if defined(__linux__) && defined(__i386__)
 
+#define IF_MASK X86_EFLAGS_IF
+#define IOPL_MASK X86_EFLAGS_IOPL
+#define VIF_MASK X86_EFLAGS_VIF
+#define TF_MASK X86_EFLAGS_TF
+
 #include <asm/vm86.h>
 
 #ifdef USE_LIBC_VM86
@@ -93,7 +98,7 @@
 	void *old_sighandler;
 	int vret;
 #endif
-} context = { 0 };
+} context;
 
 
 static inline void
@@ -578,6 +583,8 @@
 		fprintf(stderr, "%02x ", (unsigned int)p[i]);
 
 	fputs("]\n", stderr);
+#else
+	(void)vret;
 #endif
 }
 
diff -urN libx86.orig/lrmi.h libx86.my/lrmi.h
--- libx86.orig/lrmi.h	2011-10-16 16:41:19.655891295 +0300
+++ libx86.my/lrmi.h	2011-10-17 13:37:23.651373342 +0300
@@ -26,6 +26,13 @@
 #ifndef LRMI_H
 #define LRMI_H
 
+#if defined(__FREESTAND__)
+#include "../../mmap.h"
+#include "../../memcopy.h"
+#include "../../types.h"
+#endif
+
+
 #define LRMI_PREFIX LRMI_
 
 struct LRMI_regs {
diff -urN libx86.orig/Makefile libx86.my/Makefile
--- libx86.orig/Makefile	2011-10-16 16:41:19.655891295 +0300
+++ libx86.my/Makefile	2011-10-17 13:44:45.132854066 +0300
@@ -1,6 +1,8 @@
+include ../../config.mk
 OBJECTS = x86-common.o
-CFLAGS ?= -O2 -Wall -DDEBUG -g
+CFLAGS ?= -O2 -Wall -g
 LIBDIR ?= /usr/lib
+CFLAGS := $(CFLAGS) -I ./inc
 
 ifeq ($(BACKEND),x86emu)
 	OBJECTS += thunk.o x86emu/decode.o x86emu/debug.o x86emu/fpu.o \
diff -urN libx86.orig/thunk.c libx86.my/thunk.c
--- libx86.orig/thunk.c	2011-10-16 16:41:19.655891295 +0300
+++ libx86.my/thunk.c	2011-10-17 13:45:51.607023024 +0300
@@ -54,11 +54,14 @@
 void
 printk(const char *fmt, ...)
 {
+	(void)fmt;
+#if 0
 	va_list argptr;
 	va_start(argptr, fmt);
 
 	fprintf(stderr, fmt, argptr);
 	va_end(argptr);
+#endif
 }
 
 u8 read_b(int addr) {
@@ -137,6 +140,7 @@
 
 int LRMI_init() {
 	int i;
+	volatile char *ptr = 0;
 	X86EMU_intrFuncs intFuncs[256];
 
 	if (!LRMI_common_init())
@@ -169,7 +173,7 @@
 	X86_ESP = 0xFFF9;
 	memset (stack, 0, 64*1024);
 
-	*((char *)0) = 0x4f; /* Make sure that we end up jumping back to a
+	*(ptr) = 0x4f; /* Make sure that we end up jumping back to a
 				halt instruction */
 
 	M.mem_base = 0;
diff -urN libx86.orig/x86-common.c libx86.my/x86-common.c
--- libx86.orig/x86-common.c	2011-10-16 16:41:19.655891295 +0300
+++ libx86.my/x86-common.c	2011-10-17 13:45:29.130304022 +0300
@@ -46,17 +46,28 @@
 	int ready;
 	int count;
 	struct mem_block blocks[REAL_MEM_BLOCKS];
-} mem_info = { 0 };
+} mem_info;
+//} mem_info = { 0 };
 
 static int
 real_mem_init(void)
 {
 	void *m;
+#if defined(__FREESTAND__)
+#else
 	int fd_zero;
+#endif
+	int i;
 
 	if (mem_info.ready)
 		return 1;
 
+#if defined(__FREESTAND__)
+	m = mapPhys((void *)REAL_MEM_BASE, REAL_MEM_SIZE);
+	if (m==NULL) {
+		return 0;
+	}
+#else
 	fd_zero = open("/dev/zero", O_RDWR);
 	if (fd_zero == -1) {
 		perror("open /dev/zero");
@@ -74,9 +85,14 @@
 	}
 
 	close(fd_zero);
+#endif
 
 	mem_info.ready = 1;
 	mem_info.count = 1;
+	for (i=1; i<REAL_MEM_BLOCKS; i++) {
+		mem_info.blocks[0].size = 0;
+		mem_info.blocks[0].free = 0;
+	}
 	mem_info.blocks[0].size = REAL_MEM_SIZE;
 	mem_info.blocks[0].free = 1;
 
@@ -87,7 +103,11 @@
 real_mem_deinit(void)
 {
 	if (mem_info.ready) {
+#if defined(__FREESTAND__)
+		unmapPhys((void *)REAL_MEM_BASE, REAL_MEM_SIZE);
+#else
 		munmap((void *)REAL_MEM_BASE, REAL_MEM_SIZE);
+#endif
 		mem_info.ready = 0;
 	}
 }
@@ -203,7 +223,10 @@
 int LRMI_common_init(void)
 {
 	void *m;
+#if defined(__FREESTAND__)
+#else
 	int fd_mem;
+#endif
 
 	if (!real_mem_init())
 		return 0;
@@ -212,6 +235,20 @@
 	 Map the Interrupt Vectors (0x0 - 0x400) + BIOS data (0x400 - 0x502)
 	 and the ROM (0xa0000 - 0x100000)
 	*/
+#if defined(__FREESTAND__)
+	m = mapPhys((void *)0, 0x502);
+	if (m==NULL) {
+		real_mem_deinit();
+		return 0;
+	}
+
+	m = mapPhys((void *)0xa0000, 0x100000 - 0xa0000);
+	if (m==NULL) {
+		unmapPhys((void*)0, 0x502);
+		real_mem_deinit();
+		return 0;
+	}
+#else
 	fd_mem = open("/dev/mem", O_RDWR);
 
 	if (fd_mem == -1) {
@@ -244,6 +281,7 @@
 	}
 
 	close(fd_mem);
+#endif
 
 	return 1;
 }
diff -urN libx86.orig/x86emu/debug.c libx86.my/x86emu/debug.c
--- libx86.orig/x86emu/debug.c	2011-10-16 16:41:19.655891295 +0300
+++ libx86.my/x86emu/debug.c	2011-10-16 20:20:11.807977829 +0300
@@ -366,6 +366,7 @@
 
 void x86emu_dump_regs (void)
 {
+#ifdef DEBUG
 	fprintf(stderr, "\tAX=%04x  ", M.x86.R_AX );
 	fprintf(stderr, "BX=%04x  ", M.x86.R_BX );
 	fprintf(stderr, "CX=%04x  ", M.x86.R_CX );
@@ -396,10 +397,12 @@
 	if (ACCESS_FLAG(F_CF))    fprintf(stderr, "CY ");
 	else                        fprintf(stderr, "NC ");
 	fprintf(stderr, "\n");
+#endif /* DEBUG */
 }
 
 void x86emu_dump_xregs (void)
 {
+#ifdef DEBUG
 	printf("\tEAX=%08x  ", M.x86.R_EAX );
 	printf("EBX=%08x  ", M.x86.R_EBX );
 	printf("ECX=%08x  ", M.x86.R_ECX );
@@ -430,4 +433,5 @@
 	if (ACCESS_FLAG(F_CF))    printf("CY ");
 	else                        printf("NC ");
 	printf("\n");
+#endif /* DEBUG */
 }
diff -urN libx86.orig/x86emu/decode.c libx86.my/x86emu/decode.c
--- libx86.orig/x86emu/decode.c	2011-10-16 16:41:19.650891357 +0300
+++ libx86.my/x86emu/decode.c	2011-10-16 20:23:45.359308070 +0300
@@ -716,7 +716,7 @@
 		DECODE_PRINTF("ILLEGAL SEGREG");
 		break;
 	}
-	printf("reg %d\n", reg);
+	//printf("reg %d\n", reg);
 		//DECODE_PRINTF("CS");
 		//return &M.x86.R_CS;
 	/*HALT_SYS();*/
diff -urN libx86.orig/x86emu/include/regs.h libx86.my/x86emu/include/regs.h
--- libx86.orig/x86emu/include/regs.h	2011-10-16 16:41:19.654891307 +0300
+++ libx86.my/x86emu/include/regs.h	2011-10-16 19:54:45.308061705 +0300
@@ -299,7 +299,7 @@
 typedef struct {
 	unsigned long	mem_base;
 	unsigned long	mem_size;
-	void*        	private;
+	void*        	p_private;
 	X86EMU_regs		x86;
 	} X86EMU_sysEnv;
 
diff -urN libx86.orig/x86emu/include/xf86int10.h libx86.my/x86emu/include/xf86int10.h
--- libx86.orig/x86emu/include/xf86int10.h	2011-10-16 16:41:19.654891307 +0300
+++ libx86.my/x86emu/include/xf86int10.h	2011-10-16 19:55:18.279649503 +0300
@@ -43,7 +43,7 @@
     CARD16  inb40time;
     char * BIOSScratch;
     int Flags;
-    pointer private;
+    pointer p_private;
     struct _int10Mem* mem;
     int num;
     int ax;
diff -urN libx86.orig/x86emu/prim_ops.c libx86.my/x86emu/prim_ops.c
--- libx86.orig/x86emu/prim_ops.c	2011-10-16 16:41:19.654891307 +0300
+++ libx86.my/x86emu/prim_ops.c	2011-10-17 08:57:01.743676130 +0300
@@ -2271,7 +2271,7 @@
 ****************************************************************************/
 void idiv_long(u32 s)
 {
-#ifdef	__HAS_LONG_LONG__
+#if 0 //def	__HAS_LONG_LONG__
 	s64 dvd, div, mod;
 
 	dvd = (((s64)M.x86.R_EDX) << 32) | M.x86.R_EAX;
@@ -2396,7 +2396,7 @@
 ****************************************************************************/
 void div_long(u32 s)
 {
-#ifdef	__HAS_LONG_LONG__
+#if 0 //def	__HAS_LONG_LONG__
 	u64 dvd, div, mod;
 
 	dvd = (((u64)M.x86.R_EDX) << 32) | M.x86.R_EAX;
@@ -2406,7 +2406,7 @@
 	}
 	div = dvd / (u32)s;
 	mod = dvd % (u32)s;
-	if (abs(div) > 0xffffffff) {
+	if (llabs(div) > 0xffffffffUL) {
 		x86emu_intr_raise(0);
 		return;
 	}
@@ -2428,7 +2428,7 @@
 		div <<= 1;
 		carry = (l_dvd >= l_s) ? 0 : 1;
 		
-		if (h_dvd < (h_s + carry)) {
+		if (h_dvd>=0 && ((u32)h_dvd < (h_s + carry))) {
 			h_s >>= 1;
 			l_s = s << (--counter);
 			continue;
diff -urN libx86.orig/x86emu/sys.c libx86.my/x86emu/sys.c
--- libx86.orig/x86emu/sys.c	2011-10-16 16:41:19.653891319 +0300
+++ libx86.my/x86emu/sys.c	2011-10-17 13:37:39.081180444 +0300
@@ -220,11 +220,18 @@
 
 u32 mmap_read (off_t addr, u8 size) {
   u32 value;
+#if defined(__FREESTAND__)
+  int offset = addr % 4096;
+  void *identity = mapPhys((void*)addr, 8192);
+  memcpy(&value, identity+offset, size);
+  unmapPhys(identity, 8192);
+#else
   int fd = open ("/dev/mem", O_RDWR);
   int offset = addr % 4096;
   void *identity = mmap(NULL, 8192, PROT_READ, MAP_PRIVATE, fd, (addr-offset));
   memcpy (&value, identity+offset, size);
   munmap (identity, 8192);
+#endif
   return value;
 }
 
@@ -424,7 +431,8 @@
 static u8 X86API p_inb(
 	X86EMU_pioAddr addr)
 {
-	printf("No real inb\n");
+	//printf("No real inb\n");
+	(void)addr;
 DB(	if (DEBUG_IO_TRACE())
 		printk("inb %#04x \n", addr);)
 	return 0;
@@ -441,7 +449,8 @@
 static u16 X86API p_inw(
 	X86EMU_pioAddr addr)
 {
-	printf("No real inw\n");
+	(void)addr;
+	//printf("No real inw\n");
 DB(	if (DEBUG_IO_TRACE())
 		printk("inw %#04x \n", addr);)
 	return 0;
@@ -458,7 +467,8 @@
 static u32 X86API p_inl(
 	X86EMU_pioAddr addr)
 {
-	printf("No real inl\n");
+	(void)addr;
+	//printf("No real inl\n");
 DB(	if (DEBUG_IO_TRACE())
 		printk("inl %#04x \n", addr);)
 	return 0;
@@ -475,7 +485,9 @@
 	X86EMU_pioAddr addr,
 	u8 val)
 {
-	printf("No real outb\n");
+	(void)addr;
+	(void)val;
+	//printf("No real outb\n");
 DB(	if (DEBUG_IO_TRACE())
 		printk("outb %#02x -> %#04x \n", val, addr);)
     return;
@@ -492,7 +504,9 @@
 	X86EMU_pioAddr addr,
 	u16 val)
 {
-	printf("No real outw\n");
+	(void)addr;
+	(void)val;
+	//printf("No real outw\n");
 DB(	if (DEBUG_IO_TRACE())
 		printk("outw %#04x -> %#04x \n", val, addr);)
 	return;
@@ -509,7 +523,9 @@
 	X86EMU_pioAddr addr,
 	u32 val)
 {
-	printf("No real outl\n");
+	(void)addr;
+	(void)val;
+	//printf("No real outl\n");
 DB(	if (DEBUG_IO_TRACE())
 		printk("outl %#08x -> %#04x \n", val, addr);)
     return;
diff -urN libx86.orig/x86emu/x86emu/regs.h libx86.my/x86emu/x86emu/regs.h
--- libx86.orig/x86emu/x86emu/regs.h	2011-10-16 16:41:19.650891357 +0300
+++ libx86.my/x86emu/x86emu/regs.h	2011-10-16 19:54:56.843917486 +0300
@@ -298,7 +298,7 @@
 typedef struct {
 	unsigned long	mem_base;
 	unsigned long	mem_size;
-	void*        	private;
+	void*        	p_private;
 	X86EMU_regs		x86;
 	} X86EMU_sysEnv;
 
diff -urN libx86.orig/x86emu/x86emu/x86emui.h libx86.my/x86emu/x86emu/x86emui.h
--- libx86.orig/x86emu/x86emu/x86emui.h	2011-10-16 16:41:19.651891344 +0300
+++ libx86.my/x86emu/x86emu/x86emui.h	2011-10-17 13:40:01.769396595 +0300
@@ -47,6 +47,13 @@
  * dramatically in this case).
  */
 
+#if defined(__FREESTAND__)
+#include "../../../../mmap.h"
+#include "../../../../memcopy.h"
+#include "../../../../types.h"
+#include "../../../../math.h"
+#endif
+
 #if	defined(__cplusplus) && !defined(_NO_INLINE)
 #define	_INLINE	inline
 #else
@@ -58,7 +65,7 @@
 #ifdef __cplusplus
 #define	X86EMU_UNUSED(v)
 #else
-#define	X86EMU_UNUSED(v)	v
+#define	X86EMU_UNUSED(v)	__attribute__((unused))v
 #endif
 
 #include "x86emu.h"
